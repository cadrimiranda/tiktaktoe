import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import styled from "styled-components";
import {
  offlinePlayer,
  playerValue,
  THandleClickCellCallback,
  useBoard,
} from "../hooks/useBoard";
import styles from "../styles/Home.module.css";

const Table = styled.table`
  border-collapse: collapse;

  tr {
    border-bottom: 1px solid red;
    &:last-child {
      border-bottom: none;
    }

    td {
      border-right: 1px solid red;

      &:last-child {
        border-right: none;
      }

      button {
        appearance: none;
        border: none;
        background-color: transparent;
      }
    }

    td,
    button {
      width: 50px;
      height: 50px;
    }
  }
`;

const Home: NextPage = () => {
  const [player, setPlayer] = useState<offlinePlayer>(offlinePlayer.x);
  const { board, handleClickCell } = useBoard();

  const renderCell = (cell: playerValue) => {
    if (cell === playerValue.empty) {
      return "";
    }

    return cell;
  };

  const handleClickCellCallback = ({
    endGame,
    win,
  }: THandleClickCellCallback) => {
    if (win) {
      alert(`Player ${player} venceu`);
    }

    if (endGame) {
      alert("Empate");
    }

    let _player = offlinePlayer.x;
    if (player === offlinePlayer.x) {
      _player = offlinePlayer.o;
    }
    setPlayer(_player);
  };

  const renderBoard = () => {
    return (
      <Table>
        {board.map((line, lineIndex) => {
          return (
            <tr key={lineIndex}>
              {line.map((cell, cellIndex) => (
                <td key={`${cell}-${cellIndex}-${lineIndex}`}>
                  <button
                    onClick={() =>
                      handleClickCell({
                        lineIndex,
                        cellIndex,
                        player,
                        callBack: handleClickCellCallback,
                      })
                    }
                  >
                    {renderCell(cell)}
                  </button>
                </td>
              ))}
            </tr>
          );
        })}
      </Table>
    );
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>Player: {player}</header>
      <main className={styles.main}>{renderBoard()}</main>
    </div>
  );
};

export default Home;
